; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .

; Common settings for all environments
[env]
platform = espressif8266
framework = arduino
board = esp12e
platform_packages = framework-arduinoespressif8266 @ file://../../OSS-dependencies/Arduino_BSP/esp8266-3.0.2-modified.zip
lib_deps =
    file://../../OSS-dependencies/libraries/ESPAsyncTCP-master-modified.zip ; ESPAsyncTCP must be listed before AsyncMqttClient because it overwrites its dependency
    marvinroger/AsyncMqttClient@^0.9.0
    tzapu/WiFiManager @ 2.0.17
    https://github.com/LennartHennigs/ESPTelnet.git#2.0.0
build_unflags = -Werror=return-type
build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
    -D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
    -DVTABLES_IN_FLASH
    -Wfatal-errors
board_build.f_flash = 40000000L
board_build.flash_mode = dout
board_build.ldscript = eagle.flash.4m.ld ; eagle.flash.1m.ld breaks OTA functionality and is dangerous for hardware when pushed via OTA from an Arduino IDE compiled firmware
upload_speed = 115200
upload_resetmethod = nodemcu

extra_scripts = flash_external.py
upload_port = COM7 ; Change this to the correct port for your system or the IP of the device for OTA

[env:Daikin-E-USB]
upload_protocol = esptool
build_flags = ${env.build_flags} -D E_SERIES
external_binary_path = ../../Firmware_images/P1P2MQTT-bridge-v0.9.57-Daikin-E.ino.bin

[env:Daikin-E-OTA]
upload_protocol = espota
upload_flags = --auth=P1P2MQTT
build_flags = ${env:Daikin-E-USB.build_flags}
external_binary_path = ${env:Daikin-E-USB.external_binary_path}

[env:Daikin-F-USB]
upload_protocol = esptool
build_flags = ${env.build_flags} -D F_SERIES
external_binary_path = ../../Firmware_images/P1P2MQTT-bridge-v0.9.57-Daikin-F1F2.ino.bin

[env:Daikin-F-OTA]
upload_protocol = espota
upload_flags = --auth=P1P2MQTT
build_flags = ${env:Daikin-F-USB.build_flags}
external_binary_path = ${env:Daikin-F-USB.external_binary_path}

[env:Hitachi-USB]
upload_protocol = esptool
build_flags = ${env.build_flags} -D H_SERIES
external_binary_path = ../../Firmware_images/P1P2MQTT-bridge-v0.9.57-Hitachi.ino.bin

[env:Hitachi-OTA]
upload_protocol = espota
upload_flags = --auth=P1P2MQTT
build_flags = ${env:Hitachi-USB.build_flags}
external_binary_path = ${env:Hitachi-USB.external_binary_path}

[env:MHI-USB]
upload_protocol = esptool
build_flags = ${env.build_flags} -D MHI_SERIES
external_binary_path = ../../Firmware_images/P1P2MQTT-bridge-v0.9.57-MHI.ino.bin

[env:MHI-OTA]
upload_protocol = espota
upload_flags = --auth=P1P2MQTT
build_flags = ${env:MHI-USB.build_flags}
external_binary_path = ${env:MHI-USB.external_binary_path}

[env:HomeWizard2MQTT-USB]
upload_protocol = esptool
build_flags = ${env.build_flags} -D W_SERIES
lib_deps =
    ${env.lib_deps}
    https://github.com/bblanchon/ArduinoJson#v6.11.3
external_binary_path = ../../Firmware_images/HomeWizard-kWh-MQTT-bridge-v0.9.57.ino.bin

[env:HomeWizard2MQTT-OTA]
upload_protocol = espota
upload_flags = --auth=P1P2MQTT
build_flags = ${env:HomeWizard2MQTT-USB.build_flags}
lib_deps = ${env:HomeWizard2MQTT-USB.lib_deps}
external_binary_path = ${env:HomeWizard2MQTT-USB.external_binary_path}
